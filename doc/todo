General
	add_cumul_user_perc is super slow, any chance to make it faster?
	Write an aggregation rule that takes into account previous performance by forecasters

Make fields for prediction market data and survey data consistent
	What about prices before & after trades?

Finish documentation
	Describe all fields returned by `get_survey_forecasts` and `get_market_forecasts`
	More examples!

Data in general
	Unify fields, think about better names for fields
	Date fields:
		Change to python datetime.datetime (to represent far future!)
	Field order:
	{general} question_id, user_id, probability, answer_option, timestamp,
	{question} outcome, date_start, date_suspend, date_to_close, date_closed, n_opts, options, q_status, q_type

Market data
	6413 sometimes has no result in market data, I suspect there's no result in many of them!
	With year 2/3 data, is the field price the price before or after the trade?

Forecasters ranked by previous performance
	Add the option to pass user-defined data along in `calculate_aggregate_score`
	Separate function to add cumulative user performance to DataFrame
		* parameters: dataset with forecasts, caller-defined scoring rule
		* outputs: input dataframe with cumulative scoring rule value & percentile among all forecasters

No subtly dropping data in market loading? (of voided questions, that is)

Forum post
	Qualitative user studies
	Reciprocal code review

Perhaps incorporate from all Metaforecast platforms?
	betfair.ts
	givewellopenphil.ts
	index.ts
	metaculus
	rootclaim.ts
	goodjudgmentopen.ts
	infer.ts
	polymarket.ts
	smarkets.ts
	fantasyscotus.ts
	goodjudgment.ts
	kalshi.ts
	predictit.ts
	wildeford.ts
	foretold.ts
	guesstimate.ts
	manifold.ts
	registry.ts
	xrisk.ts

There's a clash between metaculus & gjopen data:
	* gjopen doesn't have a conception of a question being closed, it's either resolved or not.
		* Recitfy this in the fields q_status, close_time and resolve_time!

Incorrect fields:
	markets:
		user_id should be float64
		team_id should be float64
	surveys:
		question_id should be float64
	metaculus private binary:
		question_id should be float64
		user_id should be float64
		team_id should be float64
	For GJP, make all "closed" q_statuses "resolved", and set "close_time" to NaT
	Change team id 0 to NaN in GJP data.
	Make all times datetime.datetime instead of datetime64[ns] (bc of overflow)
	Think about:
		is answer_option as string really that good?
